{"version":3,"sources":["todoReducer.js","components/TodoListItem.js","components/TodoList.js","components/TodoAdd.js","hooks/useForm.js","TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleDelete","handleToogle","className","onClick","desc","TodoList","todos","i","TodoAdd","handleAddTodo","initialState","useState","values","setValues","handleInputChange","target","name","value","useForm","description","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ec89c09.chunk.js","sourcesContent":["\r\nexport const todoReducer = ( state = [], action ) =>{\r\n\r\n\r\n    switch ( action.type ) {\r\n        case 'add':\r\n            return [ ... state, action.payload ];\r\n\r\n        case 'delete':\r\n            // filter devuelve un nuevo arreglo\r\n            return state.filter( todo => todo.id !== action.payload );\r\n        \r\n        case 'toggle':\r\n            return state.map( todo => \r\n                ( todo.id === action.payload )\r\n                    ? { ... todo, done: !todo.done }\r\n                    : todo\r\n            );\r\n\r\n        case 'toggle-old':\r\n            return state.map( todo => {\r\n                if( todo.id === action.payload ){\r\n                    return {\r\n                        ...todo,\r\n                        done: !todo.done\r\n                    }\r\n                } else {\r\n                    return todo;\r\n                }\r\n            })\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TodoListItem = ( {todo, index, handleDelete, handleToogle} ) => {\r\n    return (\r\n        <li\r\n             key={ todo.id }\r\n             className='list-group-item ' \r\n\r\n        > \r\n             <p \r\n                className={ `${ todo.done && 'complete'}`}\r\n                onClick={ () => handleToogle( todo.id ) }\r\n             >\r\n                { index + 1}. { todo.desc}\r\n             </p>\r\n             <button\r\n                 className='btn btn-danger'\r\n                 onClick={ () => handleDelete(todo.id) }\r\n             >\r\n             \r\n                 Borrar\r\n             </button>\r\n        </li>\r\n\r\n    )\r\n}\r\n\r\nTodoListItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n    handleDelete: PropTypes.func.isRequired,\r\n    handleToogle: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { TodoListItem } from './TodoListItem'\r\n\r\nexport const TodoList = ( {todos, handleDelete, handleToogle}) => {\r\n    return (\r\n        <ul className='list-group list-group-flush '>\r\n            {\r\n                todos.map( ( todo, i ) =>(\r\n                    <TodoListItem \r\n                    key={ todo.id }\r\n                    todo={ todo }\r\n                    index={ i }\r\n                    handleDelete={ handleDelete}\r\n                    handleToogle={ handleToogle }\r\n                />\r\n                ))\r\n            }    \r\n        </ul>\r\n    )\r\n}\r\n\r\nTodoList.propTypes = {\r\n    todos        : PropTypes.array.isRequired,\r\n    handleDelete : PropTypes.func.isRequired,\r\n    handleToogle : PropTypes.func.isRequired, \r\n\r\n}","import React from 'react'\r\nimport { useForm } from '../hooks/useForm'\r\n\r\nexport const TodoAdd = ( { handleAddTodo }) => {\r\n\r\n    const [ {description}, handleInputChange, reset ]=useForm({\r\n        description : ''\r\n    });\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        \r\n        if ( description.trim().length <= 1) {\r\n            return;\r\n        }\r\n\r\n        const newTodo = {\r\n            id   : new Date().getTime(),\r\n            desc : description,\r\n            done : false\r\n        };\r\n\r\n        handleAddTodo( newTodo );\r\n        reset();\r\n    }\r\n    return (\r\n        <>\r\n            <h4 className='text-primary'>\r\n                Agregar producto a la lista\r\n            </h4>\r\n            <hr />                        \r\n            <form onSubmit={ handleSubmit }>\r\n                    <input \r\n                        type='text'\r\n                        name= 'description'\r\n                        className='form-control'\r\n                        placeholder='Producto...'\r\n                        autoComplete='off'\r\n                        value={ description }\r\n                        onChange={ handleInputChange }\r\n                    />            \r\n                    <button\r\n                        type='submit'\r\n                        className='btn btn-outline-primary mt-3 mb-3 btn-block'\r\n                    >\r\n                        Agregar\r\n                    </button>\r\n\r\n            </form>  \r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState( initialState );\r\n\r\n    const reset = () =>{\r\n\r\n        setValues(initialState);\r\n}\r\n\r\n    const handleInputChange = ( { target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ] : target.value\r\n        });\r\n\r\n    };\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport { todoReducer } from './todoReducer';\r\nimport { TodoList } from './components/TodoList';\r\nimport { TodoAdd } from './components/TodoAdd';\r\n\r\nimport './styles.css';\r\n\r\n\r\nconst init = () => {\r\n\r\n    return JSON.parse(localStorage.getItem('todos')) || [];\r\n\r\n};\r\n\r\n\r\nexport const TodoApp = () => {\r\n\r\n    const [ todos, dispatch ] = useReducer( todoReducer, [], init );\r\n    \r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify( todos ));\r\n    }, [todos])\r\n\r\n\r\n    const handleDelete = ( todoId ) => {\r\n\r\n        const action = {\r\n            type : 'delete',\r\n            payload : todoId\r\n        }\r\n\r\n        dispatch( action );\r\n    };\r\n\r\n\r\n    const handleToogle = ( todoId ) => {\r\n\r\n        dispatch({\r\n            type    : 'toggle',\r\n            payload : todoId\r\n        })\r\n    };\r\n\r\n    const handleAddTodo = ( newTodo) => {\r\n        \r\n        dispatch( {\r\n            type : 'add',\r\n            payload : newTodo\r\n        } );\r\n\r\n    };\r\n   \r\n\r\n    return (\r\n        <div>\r\n            <h1 className='text-primary'>Lista de la compra ({ todos.length })</h1>\r\n            <hr />\r\n\r\n                <div className='row'>\r\n                    <div className='col-7'>\r\n                        <TodoList \r\n                            todos={ todos }\r\n                            handleDelete={ handleDelete }\r\n                            handleToogle={ handleToogle }\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='col-5'>\r\n                        <TodoAdd \r\n                            handleAddTodo={ handleAddTodo }\r\n                        />\r\n                    </div>\r\n        \r\n                </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './TodoApp';\n\n\nReactDOM.render(\n  <TodoApp />,\ndocument.getElementById('root')\n);\n"],"sourceRoot":""}